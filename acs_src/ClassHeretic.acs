script "TomeOfPowerStartCheck" (void)
{
	if (!isFreeForAll() && !isTeamGame()) { GiveInventory("PortTomeCoOp",1); }
}

script "TomeOfPowerCooldownReduction" (void)
{
	TakeInventory("TomeOfPowerCooldown",CheckInventory("TomeOfPowerCooldown")/2);
	SetResultValue(1);
}

script "HereticTomeChargeRate" (void)
{
	int weaponCount = CheckInventory("GotWeapon0") + CheckInventory("GotWeapon2") + CheckInventory("GotWeapon3") + CheckInventory("GotWeapon4") + CheckInventory("GotWeapon5") + CheckInventory("GotWeapon6") + CheckInventory("GotWeapon7");
	int result = 1800;

	until(weaponCount == 0)
	{
		weaponCount--;
		result = (result * 2)/3;
	}

	SetResultValue(result);
}

script "CorvusFaceTarget" (void)
{
	SetActivator(0, AAPTR_MASTER);
	SetResultValue(GetActorAngle(0));
}

script "HereticCloneSpawner" (int powered, int clonetype)
{
	int corvTid = UniqueTID();
	int z = GetActorZ(0);
	str cloneClassname, minionCountToken;

	if (powered)
	{
		cloneClassname = clonetype > 0 ? "HereticCorvusCloneCoop" : "HereticCorvusClone";
		minionCountToken = "DSparilStaffCloneCount";
		z -= 28.0;
	}
	else
	{
		cloneClassname = clonetype > 0 ? "FWizardCoop" : "FWizard";
		minionCountToken = "DSparilStaffWizardCount";
		z -= 34.0;
	}
	
	SpawnForced(cloneClassname, GetActorX(0), GetActorY(0), z, corvTid);
	SetActorAngle(corvTid, GetActorAngle(0));
	SetActivator(0, AAPTR_TARGET);
	GiveInventory(minionCountToken,1);
	int minionCounter = CheckInventory(minionCountToken);
	SetPointerExt(AAPTR_MASTER, 0, corvTid);
	Thing_SetTranslation(corvTid, -1);
	SetActivator(corvTid);
	GiveInventory("SamsaraHereticCloneCopyFriendliness", 1);
	ACS_NamedExecuteWithResult("HereticCloneThink",powered,minionCounter);
	Thing_ChangeTID(0, 0);
}

script "HereticCloneThink" (int type, int minionCounter)
{
	SetInventory(type ? "DSparilStaffCloneCount" : "DSparilStaffWizardCount",minionCounter);

	str minionThinkerToken = type ? "DSparilStaffCloneThinker" : "DSparilStaffWizardThinker";
	int actorClassification = ClassifyActor(0);

	While(actorClassification > 1 && (actorClassification & ACTOR_ALIVE))
	{
		GiveInventory(minionThinkerToken,1);
		Delay(1);
		actorClassification = ClassifyActor(0);
	}
	if(!(actorClassification & ACTOR_ALIVE) && !CheckInventory("DSparilStaffMinionDeath"))
		GiveInventory(type ? "DSparilStaffCloneACSDecrementer" : "DSparilStaffWizardACSDecrementer",1);
	SetActivator(0, AAPTR_MASTER);
}

script "HereticCloneDecrementHelper" (int type)
{
	SetResultValue(CheckInventory(type ? "DSparilStaffCloneCount" : "DSparilStaffWizardCount"));
}

script "HereticTurnTowardTarget" (int invertPitch)
{
	int corvTid = UniqueTID();

	Thing_ChangeTID(0, corvTid);
	SetActivator(0, AAPTR_MASTER);

	int playerNum = PlayerNumber();

	SetActivator(corvTid);
	Thing_ChangeTID(corvTid, 0);

	int vX = GetActorX(0) - playerLineTraceCoords[playerNum][SAMSARA_LINE_TRACE_X_IDX];
	int vY = GetActorY(0) - playerLineTraceCoords[playerNum][SAMSARA_LINE_TRACE_Y_IDX];
	int vZ = GetActorZ(0) + 32.0 - playerLineTraceCoords[playerNum][SAMSARA_LINE_TRACE_Z_IDX];

	int vAngle = VectorAngle(vX, vY) - 0.5;
	int vPitch = VectorAngle(VectorLength(vX, vY), vZ);

	SetActorAngle(0, vAngle);
	SetActorPitch(0, invertPitch ? vPitch : -vPitch);
}

script "HereticTriggerCloneAttack" (void)
{
	str puffType = isSinglePlayer() || isCoop() ? "SamsaraLineTracePuffCoop" : "SamsaraLineTracePuff";
	LineAttack(0, GetActorAngle(0), GetActorPitch(0), 0, puffType, "None", 8192.0, FHF_NORANDOMPUFFZ|FHF_NOIMPACTDECAL);

	Delay(3);

	GiveInventory("CorvusShootCloneTrigger", 1);
}
