//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////
////////////////////// HUD
////////////////////////////////////////////////////////////////////

int rottstartid = 19500;

str ammocounter[11] = {

"",
"A",
"AA",
"AAA",
"AAAA",
"AAAAA",
"AAAAAA",
"AAAAAAA",
"AAAAAAAA",
"AAAAAAAAA",
"AAAAAAAAAA"
};

str healthcount[21] = {

"",
"A",
"AA",
"AAA",
"AAAA",
"AAAAA",
"AAAAAA",
"AAAAAAA",
"AAAAAAAA",
"AAAAAAAAA",
"AAAAAAAAAA",
"AAAAAAAAAAA",
"AAAAAAAAAAAA",
"AAAAAAAAAAAAA",
"AAAAAAAAAAAAAA",
"AAAAAAAAAAAAAAA",
"AAAAAAAAAAAAAAAA",
"AAAAAAAAAAAAAAAAA",
"AAAAAAAAAAAAAAAAAA",
"AAAAAAAAAAAAAAAAAAA",
"AAAAAAAAAAAAAAAAAAAA"
};

SCRIPT "RoTT452" (void) CLIENTSIDE //452
{
	int randnum, turn, frags, p_ammo, eyey=0.1, eyex=0, phealth, rhealth;
	while(CheckInventory("RottClass"))
	{
		if (GetCVar("screenblocks") < 11 || (GetCVar("screenblocks") == 11 && CheckInventory("SamsaraUsingNewFullscreenHUD")))
		{	
			int time;
			int dyingtimer;
			int dyingsound;
			//Health Bars
            if (GetCVar("screenblocks") < 11)
            {
			    SetHudSize(320,240,1);

			    SetFont("health3D");

			    if (GetActorProperty(0, APROP_HEALTH) > 100)  { SetFont("health3d"); }
			    if (GetActorProperty(0, APROP_HEALTH) <= 100) { SetFont("health3c"); }
			    if (GetActorProperty(0, APROP_HEALTH) <= 40)  { SetFont("health2c"); }
			    if (GetActorProperty(0, APROP_HEALTH) <= 20)  { SetFont("health1c"); }
			    if (GetActorProperty(0, APROP_HEALTH) < 1)    { SetFont("TNT1A0"); }

			    if (GetActorProperty(0, APROP_HEALTH) >= 100)
				    HudMessage(s:healthcount[10];0,rottstartid+11556,0,17.1,  239.1,0.1);
			    else
			    if (GetActorProperty(0, APROP_HEALTH) > 10)
				    HudMessage(s:healthcount[GetActorProperty(0, APROP_HEALTH)/10];0,rottstartid+11556,0,17.1 , 239.1,0.1);
			    else
			    if(GetActorProperty(0, APROP_HEALTH) != 0)
				    HudMessage(s:healthcount[1];0,rottstartid+11556,0,17.1 , 239.1,0.1);
            }
	
			//Dying sounds
			if(GetActorProperty(0, APROP_HEALTH) <= 0)
			{
				if(dyingsound == false)
					LocalAmbientSound("gen/death",127);	
					
				dyingsound = true;
			}
			else { dyingsound = false; }

			if(GetActorProperty(0, APROP_HEALTH) <= 20 && dyingtimer >= 175)
			{
				LocalAmbientSound("gen/dying",127);
				dyingtimer = 0;
			}
			else
			{
				dyingtimer++;
			}
			
			if (CheckInventory("PowerAsbestosArmor"))
			{
				SetFont("FIREP");
				SetHudSize(320, 200, 1);
				HudMessage(s:"A"; 0, rottstartid+11379, 0, 209.1  , 11.1, 0.1);
			}
		
			if (CheckInventory("PowerBulletProofVest"))
			{
				SetFont("ARMORP");
				SetHudSize(320, 200, 1);
				HudMessage(s:"A"; 0, rottstartid+11379, 0, 209.1  , 11.1, 0.1);
			}

			// Weapon Display
            if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
            {
			    /*if (CheckInventory("Excalibat"))
			    {
				    SetHudSize(320, 240, 1);
				    SetFont("STYSNUM0");
				    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11377, 0, 5.1 , 5.1, 0.1);
			    }*/

    			if (CheckInventory("GotWeapon0"))
			    {
    				SetHudSize(320, 240, 1);
				    SetFont("STYSNUM1");
				    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11376, 0, 15.1 , 5.1, 0.1);
			    }

			    if (CheckInventory("GotWeapon2"))
			    {
    				SetHudSize(320, 240, 1);
				    SetFont("STYSNUM2");
				    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11375, 0, 25.1 , 5.1, 0.1);
			    }

    			if (CheckInventory("GotWeapon3"))
	    		{
		    		SetHudSize(320, 240, 1);
				    SetFont("STYSNUM3");
				    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11374, 0, 35.1,   5.1, 0.1);
			    }

    			if (CheckInventory("GotWeapon4") || CheckInventory("RoTTM60"))
	    		{
		    		SetHudSize(320, 240, 1);
				    SetFont("STYSNUM4");
				    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11373, 0, 45.1,   5.1, 0.1);
			    }

    			if (CheckInventory("GotWeapon5") || CheckInventory("Doomstick"))
	    		{
		    		SetHudSize(320, 240, 1);
			    	SetFont("STYSNUM5");
    				HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11372, 0, 55.1,   5.1, 0.1);
			    }

    			if (CheckInventory("GotWeapon6"))
	    		{
		    		SetHudSize(320, 240, 1);
			    	SetFont("STYSNUM6");
				    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11371, 0, 65.1,   5.1, 0.1);
			    }

    			if (CheckInventory("GotWeapon7"))
	    		{
		    		SetHudSize(320, 240, 1);
			    	SetFont("STYSNUM7");
    				HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11370, 0, 75.1,   5.1, 0.1);
	    		}
            }

			SetHudSize(640, 480, 1);	
			if (CheckWeapon("DrunkMissiles"))
			{
				p_ammo = CheckInventory("DMissiles"); // Yes I know this could be made into arrays, I'm lazeh
				
				if(p_ammo > GetAmmoCapacity("DMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("DMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;
				
				SetFont("PDNKZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO4C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				HudMessage(d:CheckInventory("DMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);
				SetHudSize(480, 360, 1);
				SetFont("AMSMD0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM6");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11371, 0, 65.1 ,  5.1, 0.1);
                }
			}
			
			if (CheckWeapon("Bazooka"))
			{
				p_ammo = CheckInventory("RottMissiles");
				
				if(p_ammo > GetAmmoCapacity("RottMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("RottMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PBAZZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO1C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("RottMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);
				SetHudSize(480, 360, 1);
				SetFont("AMSMA0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);				

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM1");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11376, 0, 15.1 ,  5.1, 0.1);
                }
			}

			if (CheckWeapon(" Firebomb "))
			{
				p_ammo = CheckInventory("FBMissiles");
				
				if(p_ammo > GetAmmoCapacity("FBMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("FBMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PFBMZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO2C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("FBMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);
				SetHudSize(480, 360, 1);
				SetFont("AMSMC0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);			

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM5");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11372, 0, 55.1 ,  5.1, 0.1);
                }
			}
			
			if (CheckWeapon("Doomstick"))
			{
				p_ammo = CheckInventory("DMMissiles");
				
				if(p_ammo > GetAmmoCapacity("DMMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("DMMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PDSKA0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMOAC");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("DMMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);			
				SetHudSize(480, 360, 1);
				SetFont("AMSMS0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY3NUM5");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11372, 0, 55.1 ,  5.1, 0.1);
                }
			}

			if (CheckWeapon("Split Missile"))
			{
				p_ammo = CheckInventory("SMissiles");
				
				if(p_ammo > GetAmmoCapacity("SMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("SMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PSPLZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO6C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("SMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);			
				SetHudSize(480, 360, 1);
				SetFont("AMSMO0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);
			}

			if (CheckWeapon("FlameWall"))
			{
				p_ammo = CheckInventory("FWMissiles");
				
				if(p_ammo > GetAmmoCapacity("FWMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("FWMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PFWLZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO5C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("FWMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);				
				SetHudSize(480, 360, 1);
				SetFont("AMSMT0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);		

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM7");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11370, 0, 75.1 ,  5.1, 0.1);
                }
			}
			
			if (CheckWeapon("Excalibat"))
			{
				p_ammo = CheckInventory("BMissiles");
				
				if(p_ammo > GetAmmoCapacity("BMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("BMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PBATB0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO8C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("BMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);			
			}

			if (CheckWeapon("Dark Staff"))
			{
				p_ammo = CheckInventory("DSEnergy");
				
				if(p_ammo > GetAmmoCapacity("DSEnergy")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("DSEnergy");
				else
				if(p_ammo != 0)
					p_ammo = 1;			
			
				SetFont("PKE_B0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,470.0,0.1);
				SetFont("AMMO7C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("DSEnergy"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);			
			}

			if (CheckWeapon("HeatSeeker"))
			{
				p_ammo = CheckInventory("HSMissiles");
				
				if(p_ammo > GetAmmoCapacity("HSMissiles")/10)
					p_ammo = p_ammo*10/GetAmmoCapacity("HSMissiles");
				else
				if(p_ammo != 0)
					p_ammo = 1;	
				SetFont("PHSEZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,634.0  ,455.1,0.1);
				SetFont("AMMO3C");
				HudMessage(s:  ammocounter[p_ammo];0,rottstartid+11579,0,635.2  ,478.1,0.1);						
				SetHudSize(480, 360, 1);
				SetFont("AMSMB0");
				HudMessage(s:"A"; 0, rottstartid+11576, -1, 490.0  , 360.1, 0.1);	
				SetFont("ScoreFont");
				SetHudSize(640, 480, 1);
				HudMessage(d:CheckInventory("HSMissiles"); 0, rottstartid+11577, -1,549.2  , 465.1,0.1);	

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM3");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11374, 0, 35.1 ,  5.1, 0.1);
                }
			}
			
			if (CheckWeapon("God Hand"))
			{
				HudMessage(s:"";0,rottstartid+11578,0,580.5  ,470.0,0.1);
				SetFont("INF_C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
				SetFont("GDMODEP");
				SetHudSize(320, 200, 1);
				SetHudClipRect(184,0,16,13); 
				HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11380, 0, 192.1  , 23.1 - ((GetActorPowerupTics(0,"PowerGodProtection")/81) * 1.0), 0.1);
				SetHudClipRect(0,0,0,0);
			}

			if (CheckWeapon("Doggie"))
			{
				HudMessage(s:"";0,rottstartid+11578,0,580.5  ,470.0,0.1);
				SetFont("AMMO10C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
				SetFont("DGMODEP");
				SetHudSize(320, 200, 1);
				SetHudClipRect(184,0,16,13); 
				HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11380, 0, 192.1 , 23.1 - ((GetActorPowerupTics(0,"PowerDoggyMorph")/81) * 1.0), 0.1);
				SetHudClipRect(0,0,0,0);
			}

			if (CheckWeapon("RPistol"))
			{
				SetFont("PPSTZ0");
				HudMessage(s:"A";0,rottstartid+11578,0,590.5  ,470.0,0.1);
				SetFont("INF_C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
				SetFont("AMMO9C");	
				HudMessage(s:"A";0,rottstartid+11580,0,613.1  ,478.1,0.1);				
			}
			
			if (CheckWeapon("Double Pistols"))
			{
				SetFont("PPSTZ0");
				HudMessage(s:"AA";0,rottstartid+11578,0,565.5  ,470.0,0.1);
				SetFont("INF_C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
				SetFont("AMMO9C");	
				HudMessage(s:"A";0,rottstartid+11580,0,613.1  ,478.1,0.1);				

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM2");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11375, 0, 25.1 ,  5.1, 0.1);
                }
			}

			if (CheckWeapon("RottKnife"))
			{
				HudMessage(s:"";0,rottstartid+11578,0,580.5  ,470.0,0.1);
				SetFont("INF_C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
			}

			if (CheckWeapon("MP40"))
			{
				SetFont("PM40Z0");
				HudMessage(s:"A";0,rottstartid+11578,0,585.5  ,480.0,0.1);
				SetFont("INF_C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
				SetFont("AMMO9C");
				HudMessage(s:"A";0,rottstartid+11580,0,613.1  ,478.1,0.1);

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY2NUM4");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11373, 0, 45.1 ,  5.1, 0.1);
                }
			}
			
			if (CheckWeapon("RoTTM60"))
			{
				SetFont("PM60Z0");
				HudMessage(s:"A";0,rottstartid+11578,0,585.5  ,480.0,0.1);
				SetFont("INF_C");
				SetHudSize(640,480,1);
				HudMessage(s:"A";0,rottstartid+11579,0,595.1  ,478.1,0.1);
				SetFont("AMMO9C");
				HudMessage(s:"A";0,rottstartid+11580,0,613.1  ,478.1,0.1);

                if (CheckInventory("ExpandedHud") && GetCVar("screenblocks") == 11)
                {
                    SetHudSize(320, 240, 1);
                    SetFont("STY3NUM4");
                    HudMessage(s:"A"; HUDMSG_NOTWITHFULLMAP, rottstartid+11373, 0, 45.1 ,  5.1, 0.1);
                }
			}
			
			int addx, myx, myy;
		
            SetHudSize(320, 240, 1);

            if (GetCVar("screenblocks") < 11)
            {
                if (GetActorProperty(0, APROP_HEALTH) > 0)
                {
                    SetFont("RHEARTX2");
                    HudMessage(s:"A"; 0, rottstartid+11567, 0, 7.1,   238.1, 0.1);
                }
			
                SetFont("SCORBACK");
                HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11401, -1, 0.1, 0.1, 0.1);	
            }

            if (CheckInventory("ChickenModeOn"))
            {
                SetFont("LIFEFONT");
                HudMessage(d:CheckInventory("ChickenKillCount"); HUDMSG_NOTWITHFULLMAP, rottstartid+11399, -1, 306.0 , 8.0, 0.1);				
            } else if (IsSinglePlayer() || IsCoop()) {
                SetFont("LIFEFONT");
                HudMessage(d:CheckInventory("KillCountAmountTrue"); HUDMSG_NOTWITHFULLMAP, rottstartid+11399, -1, 306.0 , 8.0, 0.1);				
            } else {
                SetFont("LIFEFONT");
                HudMessage(d:PlayerFrags(); HUDMSG_NOTWITHFULLMAP, rottstartid+11399, -1, 306.0, 8.0, 0.1);
            }

			// Timer
			time = Timer()/35;
				
			int m, n;
			for(int i = 0; i<=9; i++)
			{
				if(time/60 < 10) { } // We don't want this for 2nd digit.
				else
				if(time/60 > 60) { } // Will have 3 digits and will display 2.
				else
				{			
					m = (time/60) - i;
					if(m == 0)
						n = i;
					else
					if(m >= 10)
						n = m/10;
				}
			}
						
			switch(CheckInventory("RottMode"))
			{	
				default:
					SetFont("FREELEY");
						
					if((PlayerFrags() < 0 && !isCoop() && !isSinglePlayer()) || GetActorProperty(0,APROP_Health) <= 0)
						SetFont("DFREELEY");
							
					if(CheckInventory("GibDelay"))
						SetFont("HFREELEY");
						
					HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11394, -1, 274.0,   0.1, 0.1);
					SetFont("NFREEL");
					break;
				case 1:
					SetFont("Cassatt");
					
					if((PlayerFrags() < 0 && !isCoop() && !isSinglePlayer()) || GetActorProperty(0,APROP_Health) <= 0)
						SetFont("DTCASS");
							
					if(CheckInventory("GibDelay"))
						SetFont("HTCASS");
					
					HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11394, -1, 274.0,   0.1, 0.1);
					SetFont("NTCASS");
					break;
				case 2:
					SetFont("Barrett");
					
					if((PlayerFrags() < 0 && !isCoop() && !isSinglePlayer()) || GetActorProperty(0,APROP_Health) <= 0)
						SetFont("DTBARR");
							
					if(CheckInventory("GibDelay"))
						SetFont("HTBARR");
				
					HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11394, -1, 274.0,   0.1, 0.1);
					SetFont("NTBARR");
					break;
				case 3:
					SetFont("Ni");
					
					if((PlayerFrags() < 0 && !isCoop() && !isSinglePlayer()) || GetActorProperty(0,APROP_Health) <= 0)
						SetFont("DLORNI");
							
					if(CheckInventory("GibDelay"))
						SetFont("HLORNI");
					
					HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11394, -1, 274.0,   0.1, 0.1);
					SetFont("NLOREL");
					break;
				case 4:
					SetFont("Wendt");
					
					if((PlayerFrags() < 0 && !isCoop() && !isSinglePlayer()) || GetActorProperty(0,APROP_Health) <= 0)
						SetFont("DWENDT");
							
					if(CheckInventory("GibDelay"))
						SetFont("HWENDT");
					
					HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11394, -1, 274.0,   0.1, 0.1);
					SetFont("NWENDT");
					break;
			}
				
			HudMessage(s:"A"; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11391, -1, 246.0 ,  1.1, 0.1);				
			
			SetFont("TIMEFONT");
			SetHudSize(320,240,1);
			HudMessage(d:(time/3600)%10, s:" ",d:n, d:(time/60)%10,s:" ", d:(time%60)/10, d:time%10; HUDMSG_PLAIN|HUDMSG_NOTWITHFULLMAP, rottstartid+11390, -1, 127.0, 8.0, 0.1);
	
			
		}
		delay(1);
    }   
}

Script "RoTT453" (void)
{
	int rechargeTimer;
	While(CheckInventory("RottClass"))
	{
		if(rechargeTimer >= 30)
		{
			GiveInventory("BMissiles",1);
			GiveInventory("DSEnergy",1);
			rechargeTimer = 0;
		}
		else
			rechargeTimer++;
			
		Delay(35);
	}
}

Script "RoTT456" (void) Clientside //456
{
	int eyey=0.1, eyex=0;
	SetHudSize(320,240,1);
	eyex = random(20.1, 300.1);

  for ( eyey = 0.0; eyey < 320.0; eyey += 12.0 )
  {
	  if (eyey <= 96.0)  { SetFont("GEYE1"); }
	  else
	  if (eyey <= 136.0) { SetFont("GEYE2"); }
	  else
	  if (eyey <= 192.0) { SetFont("GEYE3"); }
	  else
	  if (eyey <= 240.0) { SetFont("GEYE1"); }
	  else
	  if (eyey <= 320.0) { SetFont("GEYE2"); }
	  else SetFont("GEYE3");
	  HudMessage(s:"A";HUDMSG_FADEOUT,rottstartid+11900,0,eyex,(eyey),0.05,0.5);
	  delay(1);
  }
	eyey = 0.1;
}

script "SamsaraROTTGodMode" (void) // God hand script -- 987
{
    while (CheckInventory("PowerGodProtection"))
    {
        if (CheckInventory("God Hand") && !CheckWeapon("God Hand") && !CheckInventory("PowerDoggyMorph")) { SetWeapon("God Hand"); } // forcibly switch to this weapon for the duration of the powerup

        Delay(1);
    }

    if (CheckInventory("God Hand")) // this weapon can get removed on map change; don't play the sounds in that case
    {
        ActivatorSound("gen/goddown", 127);
        //ActivatorSound("gen/losepower", 127);
    }
}

Script "RoTTLudicrousGibs" (void) //996
{
	if(GetActorProperty(0, APROP_HEALTH) > 0)
	{
		ACS_NamedExecuteAlways("RoTT456", 0);
		if(CheckInventory("GibDelay") == 0)
		switch(CheckInventory("RottMode"))
		{
			default:
				ActivatorSound("freely/yes", 127);
				break;
			case 1:
				ActivatorSound("Taradino/See", 127);
				break;
			case 2:
				ActivatorSound("Thi/See", 127);
				break;
			case 3:
				ActivatorSound("Lorelei/See", 127);
				break;
			case 4:
				ActivatorSound("Doug/See", 127);
				break;
		}
		SetFont("CMPSROTT");
		SetHudSize(320, 240, 1);
		HudMessage(s:"Ludicrous Gibs!"; 0, rottstartid+8, CR_DARKGREEN, 160.0, 60.0, 1.0);
		GiveInventory("GibDelay", 1);
	}
}

script "RottSplitMissile" (void)
{
    SetInventory("SMissileSplitToken", 0);

    while (!isDead(0) && !CheckInventory("CompendiumOpened") && keyDown(BT_ATTACK)) { Delay(1); }

    SetInventory("SMissileSplitToken", 1);
}

Script "RoTTDogCheck" (void) // dog use check
{
	int buttonPress = GetPlayerInput (-1, INPUT_BUTTONS); // Checks what keys the player is pressing
	if (buttonPress & BT_USE)
	{
		SetResultValue (1);
	}
	else
	{
		SetResultValue (0);
	}
}

script "RottGasMask" (void) CLIENTSIDE
{
    int pln = PlayerNumber(); // ensure only the activator handles the script
    int cpln = ConsolePlayerNumber();

    if (pln != cpln) { terminate; }

    SetHudSize(214,200,0);
    SetFont("P_GMASK");
    HudMessage(s:"a"; 0, rottstartid + 15700, 0, 107.0, 100.0, 70.0);

    while (CheckInventory("PowerIronFeetNoColor"))
    {
        HudMessage(s:"a"; HUDMSG_LAYER_UNDERHUD|HUDMSG_NOTWITHFULLMAP, rottstartid + 15700, 0, 107.0, 100.0, 70.0);

        if (GetActorPowerupTics(0, "PowerIronFeetNoColor") % 105 == 0) { AmbientSound("gen/gasmask", 127); }

        Delay(1);
    }

    SetHudSize(0, 0, 0);
    SetFont("");
    HudMessage(s:""; 0, rottstartid + 15700, 0, 107.0, 100.0, 0);
}

script "SamsaraROTTDogModeInit" (void)
{
    int oldtid = ActivatorTid();
    int usertid = UniqueTid();
    int dummytid = UniqueTid();

    SpawnSpotForced("TranslationDummy", 0, dummytid, 0);
    Thing_SetTranslation(dummytid, -1);

    int armorAmount = CheckInventory("BasicArmor");
    str armorType = GetArmorInfo(ARMORINFO_CLASSNAME);

    Delay(1);

    GiveInventory("Doggie", 1);

    if (StrLen(armorType) > 0 && armorAmount > 0)
    {
        GiveInventory(armorType, 1);
        AdjustArmorDisplays();

        if (CheckInventory("BasicArmor") < armorAmount) { GiveInventory("InfiniteArmorBonus", armorAmount - CheckInventory("BasicArmor")); }
        else if (CheckInventory("BasicArmor") > armorAmount) { SetInventory("BasicArmor", armorAmount); }
    }

    Thing_ChangeTID(0, usertid);
    SetActivator(dummytid, AAPTR_DEFAULT);
    Thing_SetTranslation(usertid, -1);
    SetActivator(usertid, AAPTR_DEFAULT);
    Thing_ChangeTID(usertid, oldtid);

    SetWeapon("Doggie");
}

Script "RottExcalibatThrow" (void)
{
	int newTid = UniqueTid();
	Thing_ChangeTid(0,newTid);
	SetActivator(0,AAPTR_Target);
	int angle = GetActorAngle(0)+0.075;
	SetActivator(newTid,AAPTR_DEFAULT);
	SetActivator(0,AAPTR_Tracer);
	for(int a = 0; a < 8; a++)
	{
		if(ClassifyActor(0) <= 1)
			break;
		if(a < 4)
			ThrustThingZ(0,18,0,1);
		ThrustThing(angle>>8,2,0,0);
		Delay(2);
	}
}

Script "RoTTBladeGenerate" (void)
{
	int myPosX = GetActorX(0);
	int myPosY = GetActorY(0);
	int myPosZ = GetActorZ(0);
	int bladeTid = UniqueTid();
	int bladeTid2 = UniqueTid();
	int roomTid = UniqueTid();
	int bladeAngle = 0.25*random(1,4);
	int bladedistance = 48;
	int bladesCanFill = 0;
	int bladeDirection = 1-(2*random(0,1));
	int querydist = 0;
	ACS_NamedExecuteWithResult("RoTTBladeMove",bladeDirection);
	SetActorAngle(0,bladeAngle);;
	/*for(int a = 1; a <=4; a++)
	{	
		if(random(0,4) > 3)
			break;
			
		if(Spawn("RoTTBladesRoomChecker", myPosX + (cos(bladeAngle)*(bladedistance+16.0)*a), myPosY + (sin(bladeAngle)*(bladedistance+16.0)*a), myPosZ, roomTid))
		{
			Thing_Remove(roomTid);
			if(Spawn("RoTTBlades2", myPosX + (cos(bladeAngle)*bladedistance*a), myPosY + (sin(bladeAngle)*bladedistance*a), myPosZ, bladeTid2))
			{
				SetPointerExt(AAPTR_Master,0,bladeTid2);
				SetActivator(bladeTid2);
				Thing_ChangeTid(bladeTid2,0);
				if(onLiquid(0) > 0)
				{
					Thing_Remove(bladeTid2);
					break;
				}
				while(Warp(0,8.0,0,0,0,WARPF_TESTONLY) && querydist <= 64)
				{
					querydist++;
					if(Warp(0,bladedistance*1.0,0,0,0,WARPF_TESTONLY) || Warp(0,-bladedistance*1.0,0,0,0,WARPF_TESTONLY))
					{
						bladesCanFill = 1;
						break;
					}
				}
				querydist = 0;
				while(Warp(0,-8.0,0,0,0,WARPF_TESTONLY) && querydist <= 64)
				{
					querydist++;
					if(Warp(0,bladedistance*1.0,0,0,0,WARPF_TESTONLY) || Warp(0,-bladedistance*1.0,0,0,0,WARPF_TESTONLY))
					{
						bladesCanFill = 1;
						break;
					}
				}
				if(bladesCanFill == 0)
					Thing_Remove(0);
				else
					ACS_NamedExecuteWithResult("RoTTBladeMove",bladeDirection);
					
			}
		}
		
		if(a > 0)
			a = -a - 1;
		else
			a = -a;
	}*/
	Thing_ChangeTid(bladeTid,0);
}

Script "RoTTBladeMove" (int dir)
{
	if(dir < 0)
		SetActorAngle(0,GetActorAngle(0)+0.5);
	int oldtid = PickActor(0, GetActorPitch(0), 0, 2048.0, 0, MF_PICKUP, ML_BLOCKING, PICKAF_RETURNTID);
	int newtid = UniqueTid();
	if(PickActor(0, GetActorAngle(0), GetActorPitch(0), 2048.0, newtid, MF_PICKUP, ML_BLOCKING, PICKAF_FORCETID))
	{
		Thing_ChangeTid(newtid, oldtid);
		terminate;
	}
	if(PickActor(0, GetActorAngle(0) - 0.5, GetActorPitch(0), 2048.0, newtid, MF_PICKUP, ML_BLOCKING, PICKAF_FORCETID))
	{
		Thing_ChangeTid(newtid, oldtid);
		terminate;
	}
	if(random(0,4)==3)
	{
		Thing_ChangeTid(newtid, oldtid);
		terminate;
	}
	Delay(15);
	while(ClassifyActor(0) > 1)
	{
		if(CheckInventory("RoTTBladesTurnAround"))
		{
			TakeInventory("RoTTBladesTurnAround",1);
			SetActorAngle(0,GetActorAngle(0)+0.5);
		}
		
		Warp(0,4.0,0,0,0,WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION);
		
		int checkerTid = UniqueTid();
		
		SpawnForced("RoTTBladesTester",GetActorX(0)+(cos(GetActorAngle(0))*8),GetActorY(0)+(sin(GetActorAngle(0))*8),GetActorZ(0),checkerTid);
		if(GetActorFloorZ(checkerTid) != GetActorFloorZ(0))
			GiveInventory("RoTTBladesTurnAround",1);
		else
			GiveInventory("RoTTBladesBlockTrigger",1);
			
		Delay(1);
	}
}

Script "RottDoomStickThrust" (void)
{
	int thrustangle = ACS_NamedExecuteWithResult("getPointerAngle");
	int thrustpitch = -ACS_NamedExecuteWithResult("getPointerPitch");
	SetActivator(0,AAPTR_Tracer);
	int massFactor = GetActorProperty(0,APROP_Mass)/100;
	int thrustSpeed = 8/(massFactor > 0 ? massFactor : 1);
	SetActorVelocity(0,FixedMul(thrustSpeed*cos(thrustAngle),cos(thrustPitch)),FixedMul(thrustSpeed*sin(thrustAngle),cos(thrustPitch)),thrustSpeed*sin(thrustpitch),1,0);
}

script "RoTTNet" (void) //812
{
	int i;
	int knifeNum;
	
	GiveInventory("ROTTNetNoWeapon", 1);
	Setweapon("ROTTNetNoWeapon");
	SetHudSize(214,200,0);
	GiveInventory("SamsaraROTTNetSpeedDebuff", 1);
	Setfont("NET1");
	HudMessage(s:"A";0,602,0,350.0,100.0,0);

	if (CheckInventory("RottKnife") == 1)
	{
		GiveInventory("ROTTNetNoWeapon", 1);
		Setweapon("ROTTNetNoWeapon");
		Delay(15); // Give some time for the weapon to lower
		SetHudSize(214,200,0);
		
		if(CheckInventory("RottMode") == 4)
		{
			for(i = 11; i <= 20; i++)
			{
				knifeNum = strparam(s:"KNIFE", d:i);
				Setfont(knifeNum);
				HudMessage(s:"A";0,602,0,350.0,100.0,0);
				delay(2);
			}
		}
		else if(CheckInventory("RottMode") >= 2)
		{
			for(i = 1; i <= 10; i++)
			{
				knifeNum = strparam(s:"KNIFE", d:i);
				Setfont(knifeNum);
				HudMessage(s:"A";0,602,0,350.0,100.0,0);
				delay(2);
			}
		}
		else
		{
			for(i = 1; i <= 10; i++)
			{
				knifeNum = strparam(s:"KNIFE", d:i);
				Setfont(knifeNum);
				HudMessage(s:"A";0,602,0,350.0,100.0,0);
				delay(2);
			}
		}
		
		HudMessage(s:"";0,602,0,350.0,100.0,0);
		delay(8);
		TakeInventory("PowerSamsaraROTTNetSpeedDebuff", 1);
		TakeInventory("ROTTNetNoWeapon", 1);
		SetWeapon(0);
		Terminate;
	}
	else
	{
		SetFont("SMALLFONT");
		ACS_NamedExecuteAlways("RoTTNetMouse", 0, 0);
		Print(s:"\cfSwing your mouse left and right to break free!");
		terminate;
	}
 
}


Script "RoTTNetMouse" (int currentweapon) //813
{
	int i;
	int netNum;
	
    int a, b;
    int input = GetPlayerInput(-1,INPUT_YAW);   
        
   
    if(input >= 640)
		a++;
    
    if(input <= -640)
		b++;
    
	if(!CheckInventory("ROTTNetNoWeapon")) {
		HudMessage(s:"";0,602,0,350.0,100.0,0);
		Terminate;
	}
	
        if (a &&  b >= 22) {
            SetHudSize(214,200,0);
			
			for(i = 2; i <= 5; i++){
				netNum = strparam(s:"NET", d:i);
				Setfont(netNum);
				HudMessage(s:"A";0,602,0,350.0,100.0,0);
				delay(5);
			}
				
            TakeInventory("PowerSamsaraROTTNetSpeedDebuff", 1);
            HudMessage(s:"";0,602,0,350.0,100.0,0);
			TakeInventory("ROTTNetNoWeapon", 1);
			SetWeapon(currentweapon);
			a = 0;
			b = 0;
            Terminate;
        } 
			
	delay(1);
	restart;
}

script "RottDamageOnEnemy" (void)
{
    int oldtid = PickActor(0, 0, 0.25, 64.0, 0, MF_SHOOTABLE, ML_BLOCKEVERYTHING, PICKAF_RETURNTID);
    int newtid = UniqueTid();

    bool isPVEGame = isSinglePlayer() || isCoop();

    if (PickActor(0, 0, 0.25, 64.0, newtid, MF_SHOOTABLE, ML_BLOCKEVERYTHING, PICKAF_FORCETID))
    {
        if (GetActorZ(0) - (GetActorZ(newtid) + GetActorProperty(newtid, APROP_Height)) <= 0 && (ClassifyActor(newtid) & ACTOR_ALIVE) && !CheckFlag(newtid, "BOSS"))
        {
            if (isPVEGame) { LineAttack(0, 0, 0.25, 2, "NothingEnemyBeneathCoop", "None", 128.0, 0); }
            else { LineAttack(0, 0, 0.25, 2, "NothingEnemyBeneath", "None", 128.0, 0); }
        }

        Thing_ChangeTid(newtid, oldtid);
    }
}
