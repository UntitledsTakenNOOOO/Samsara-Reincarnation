#define CLASSCOUNT 34

function void AdjustHealthOverMaxDisplay (void)
{
    SetInventory("SamsaraHealthOverMax", getMaxHealth(0) * 2);
    SetInventory("SamsaraHealthOverOverMax", getMaxHealth(0) * 3);
}

function void AdjustArmorDisplays (void)
{
    int pln = PlayerNumber();

    if (GetArmorType("ArmorPack5ArmorMarathon", pln)) { SetInventory("SamsaraArmorCategory", 10); }
    else if (GetArmorType("ArmorPack2ArmorMarathon", pln) ||
             GetArmorType("EnchantedShield", pln) ||
             GetArmorType("ArmorPack3ArmorHeretic", pln) || GetArmorType("StrifeArmorPack3ArmorHeretic", pln))
    { SetInventory("SamsaraArmorCategory", 9); }
    else if (GetArmorType("ArmorScrapArmorQuake", pln) || GetArmorType("MaxArmorScrapArmorQuake", pln) ||
             GetArmorType("ArmorScrapDumpArmorQuake", pln) ||
             GetArmorType("ArmorPackBonusLightArmorQuake", pln) ||
             GetArmorType("ArmorPackBonusHeavyArmorQuake", pln) ||
             GetArmorType("ArmorPack1ArmorQuake", pln) || GetArmorType("StrifeArmorPack1ArmorQuake", pln))
    { SetInventory("SamsaraArmorCategory", 8); }
    else if (GetArmorType("ArmorScrapArmorHeretic", pln) || GetArmorType("MaxArmorScrapArmorHeretic", pln) ||
             GetArmorType("ArmorScrapDumpArmorHeretic", pln) ||
             GetArmorType("ArmorPackBonusLightArmorHeretic", pln) ||
             GetArmorType("ArmorPackBonusHeavyArmorHeretic", pln) ||
             GetArmorType("SilverShield", pln) ||
             GetArmorType("ArmorPack1ArmorHeretic", pln) || GetArmorType("StrifeArmorPack1ArmorHeretic", pln) ||
             GetArmorType("ArmorPack4ArmorQuake", pln) ||
             GetArmorType("StrifeArmorPack3ArmorQuakePlusTier2Active", pln) ||
             GetArmorType("SilverArmor", pln) || // just in case
             GetArmorType("ArmorPack5ArmorNormal", pln))
    { SetInventory("SamsaraArmorCategory", 7); }
    else if (GetArmorType("ArmorScrapArmorQuakePlus", pln) || GetArmorType("MaxArmorScrapArmorQuakePlus", pln) ||
             GetArmorType("ArmorScrapDumpArmorQuakePlus", pln) ||
             GetArmorType("ArmorPackBonusLightArmorQuakePlus", pln) ||
             GetArmorType("ArmorPackBonusHeavyArmorQuakePlus", pln) ||
             GetArmorType("YellowArmor", pln) || // just in case
             GetArmorType("ArmorPack2ArmorNormal", pln) ||
             GetArmorType("ArmorPack2ArmorQuake", pln) || GetArmorType("StrifeArmorPack3ArmorQuakeTier2Inactive", pln) ||
             GetArmorType("StrifeArmorPack1ArmorQuakePlus", pln) ||
             GetArmorType("ArmorPack2ArmorHeretic", pln) ||
             GetArmorType("ArmorPack3ArmorMarathon", pln) || GetArmorType("StrifeArmorPack3ArmorMarathon", pln))
    { SetInventory("SamsaraArmorCategory", 6); }
    else if (GetArmorType("ArmorPack5ArmorQuake", pln)) { SetInventory("SamsaraArmorCategory", 5); } // not used for armormode 0 since hexen 25 armor pickups give 25 points of tier 1 armor
    else if (GetArmorType("ArmorScrapArmorMarathon", pln) || GetArmorType("MaxArmorScrapArmorMarathon", pln) ||
             GetArmorType("ArmorScrapDumpArmorMarathon", pln) ||
             GetArmorType("ArmorPackBonusLightArmorMarathon", pln) ||
             GetArmorType("ArmorPackBonusHeavyArmorMarathon", pln) ||
             GetArmorType("ArmorPack1ArmorMarathon", pln) || GetArmorType("StrifeArmorPack1ArmorMarathon", pln) ||
             GetArmorType("ArmorPack3ArmorQuake", pln) || GetArmorType("StrifeArmorPack3ArmorQuakeTier2Active", pln) ||
             GetArmorType("StrifeArmorPack3ArmorQuakePlusTier2Inactive", pln) ||
             GetArmorType("RedArmor", pln) || // why not?
             GetArmorType("ArmorPack4ArmorNormal", pln) ||
             GetArmorType("ArmorPack4ArmorHeretic", pln))
    { SetInventory("SamsaraArmorCategory", 4); }
    else if (GetArmorType("BasicArmorPickup", pln) || GetArmorType("BlueArmor", pln) || GetArmorType("BlueArmorForMegasphere", pln) || GetArmorType("MetalArmor", pln) || GetArmorType("SuperChexArmor", pln) || // BasicArmorPickup is given by armor cheat
             GetArmorType("ArmorPack3ArmorNormal", pln) || GetArmorType("StrifeArmorPack3ArmorNormal", pln) ||
             GetArmorType("FuckArmor", pln))
    { SetInventory("SamsaraArmorCategory", 3); }
    else if (GetArmorType("BasicArmorBonus", pln) || GetArmorType("ArmorBonus", pln) || GetArmorType("MaxArmorBonus", pln) || GetArmorType("SlimeRepellent", pln) ||
             GetArmorType("ArmorScrapArmorNormal", pln) || GetArmorType("ArmorScrap100", pln) || GetArmorType("ArmorScrap200", pln) || GetArmorType("InfiniteArmorBonus", pln) || GetArmorType("MaxArmorScrapArmorNormal", pln) ||
             GetArmorType("ArmorScrapDumpArmorNormal", pln) ||
             GetArmorType("ArmorPackBonusLightArmorNormal", pln) ||
             GetArmorType("ArmorPackBonusHeavyArmorNormal", pln) ||
             GetArmorType("GreenArmor", pln) || GetArmorType("LeatherArmor", pln) || GetArmorType("ChexArmor", pln) ||
             GetArmorType("ArmorPack1ArmorNormal", pln) || GetArmorType("StrifeArmorPack1ArmorNormal", pln))
    { SetInventory("SamsaraArmorCategory", 2); }
    else if (GetArmorType("ArmorPack4ArmorMarathon", pln) ||
             GetArmorType("ArmorPack5ArmorHeretic", pln))
    { SetInventory("SamsaraArmorCategory", 1); }
    else { SetInventory("SamsaraArmorCategory", 0); } // other armors

    if (CheckInventory("BasicArmor") > 0)
    {
        // some of these armors need special adjustments. there's probably a better way to do this, but I don't know what it could be
        if (GetArmorType("ArmorPack4ArmorHeretic", pln)) { SetInventory("SamsaraArmorSavePercent", 87); }
        else if (GetArmorType("ArmorPack2ArmorHeretic", pln)) { SetInventory("SamsaraArmorSavePercent", 67); }
        else if (GetArmorType("RedArmor", pln) || // why not?
                 GetArmorType("ArmorPack4ArmorNormal", pln))
        { SetInventory("SamsaraArmorSavePercent", 66); }
        else { SetInventory("SamsaraArmorSavePercent", roundZandronum(GetArmorInfo(ARMORINFO_SAVEPERCENT) * 100)); }
    }
    else { SetInventory("SamsaraArmorSavePercent", 0); }
}

Script "GlobalRecoil" (int duration, int intensity, int halfdampen)
{
	int i = 0;
	for(i = 0; i < duration; i++)
	{
		SetActorPitch(0,GetActorPitch(0)-intensity);
		Delay(1);
	}
	for(i = duration; i > 0; i--)
	{
		SetActorPitch(0,GetActorPitch(0)+intensity/(halfdampen+1));
		Delay(1);
	}
}

Script "GetActorGender" (void)
{
	if(CheckActorState(0,"CheckFemale",true))
	{
		SetInventory("SamsaraEnemyGender",2);
		SetResultValue(2);
	}
	else if(CheckActorState(0,"CheckMale",true))
	{
		SetInventory("SamsaraEnemyGender",1);
		SetResultValue(1);
	}
	else SetResultValue(0);
}